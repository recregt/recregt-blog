name: Update Theme with Accessibility Preserved

on:
  schedule:
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-theme:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        submodules: false # Submodule'u manuel çekeceğiz
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Checkout submodule properly
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        # Submodule'u doğru branch'te çek
        git submodule init
        git submodule update --remote --checkout
        
        cd themes/PaperMod
        
        # Configure git to use PAT for authentication
        git config url."https://x-access-token:${PAT_TOKEN}@github.com/".insteadOf "https://github.com/"
        
        # Fork'umuzun master branch'ına geç (detached HEAD'den çık)
        git checkout master
        git pull origin master
        
    - name: Update theme with accessibility preserved
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        cd themes/PaperMod
        
        # Configure git to use PAT for authentication
        git config url."https://x-access-token:${PAT_TOKEN}@github.com/".insteadOf "https://github.com/"
        
        # Add upstream remote
        git remote add upstream https://github.com/adityatelange/hugo-PaperMod.git || true
        git fetch upstream
        
        # Check if update is needed
        CURRENT=$(git rev-parse HEAD)
        UPSTREAM=$(git rev-parse upstream/master)
        
        if [ "$CURRENT" = "$UPSTREAM" ]; then
          echo "Theme already up to date"
          exit 0
        fi
        
        # Backup our accessibility files
        mkdir -p /tmp/our-files
        cp layouts/_default/baseof.html /tmp/our-files/ 2>/dev/null || true
        cp layouts/partials/header.html /tmp/our-files/ 2>/dev/null || true
        cp layouts/partials/footer.html /tmp/our-files/ 2>/dev/null || true  
        cp layouts/partials/toc.html /tmp/our-files/ 2>/dev/null || true
        
        # Merge upstream changes
        git merge upstream/master --no-edit || {
          # Restore our files in case of conflicts
          cp /tmp/our-files/* layouts/_default/ 2>/dev/null || true
          cp /tmp/our-files/* layouts/partials/ 2>/dev/null || true
          git add .
          git commit -m "chore: preserve accessibility improvements during upstream merge"
        }
        
        # Verify we're on master branch
        CURRENT_BRANCH=$(git branch --show-current)
        if [ "$CURRENT_BRANCH" != "master" ]; then
          echo "Error: Not on master branch, current: $CURRENT_BRANCH"
          exit 1
        fi
        
        # Push to our fork
        git push origin master
        
    - name: Update submodule in main project
      run: |
        # Update submodule reference (we're in the main project root)
        git add themes/PaperMod
        
        # Commit if there are changes
        if ! git diff --cached --quiet; then
          git commit -m "chore: update PaperMod theme (automated)"
          git push origin main
        else
          echo "No submodule changes to commit"
        fi